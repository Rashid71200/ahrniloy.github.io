/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 pi.gltf --transform
Author: HunterVacui (https://sketchfab.com/HunterVacui)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/raspberry-pi-zero-w-v11-cc45a257f2fd44dd855ee755acad5d6e
Title: Raspberry Pi Zero W v1.1
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

export default function Model(props) {
  const { nodes, materials } = useGLTF('/pi-transformed.glb')
  return (
    <group {...props} dispose={null}>
      <group scale={2.68}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <mesh geometry={nodes.processor_0.geometry} material={materials['metal.001']} />
          <mesh geometry={nodes.processor_1.geometry} material={materials['3.001']} />
        </group>
        <group position={[0.01, -0.03, 0]} rotation={[Math.PI / 2, Math.PI / 2, 0]}>
          <mesh geometry={nodes.Capacitors012_0.geometry} material={materials['17.001']} />
          <mesh geometry={nodes.Capacitors012_1.geometry} material={materials['metal.001']} />
          <mesh geometry={nodes.Capacitors012_2.geometry} material={materials['20.001']} />
          <mesh geometry={nodes.Capacitors012_3.geometry} material={materials['12.001']} />
          <mesh geometry={nodes.Capacitors012_4.geometry} material={materials['1.001']} />
          <mesh geometry={nodes.Capacitors012_5.geometry} material={materials['13.001']} />
          <mesh geometry={nodes.Capacitors012_6.geometry} material={materials['3.001']} />
          <mesh geometry={nodes.Capacitors012_7.geometry} material={materials['18.001']} />
          <mesh geometry={nodes.Capacitors012_8.geometry} material={materials['10.001']} />
          <mesh geometry={nodes.Capacitors012_9.geometry} material={materials['2.001']} />
          <mesh geometry={nodes.Capacitors012_10.geometry} material={materials['11.001']} />
          <mesh geometry={nodes.Capacitors012_11.geometry} material={materials['4.001']} />
          <mesh geometry={nodes.Capacitors012_12.geometry} material={materials['20.001']} />
          <mesh geometry={nodes.Capacitors012_13.geometry} material={materials['15.001']} />
        </group>
        <mesh geometry={nodes.micro_Usb_0.geometry} material={materials['metal.001']} rotation={[Math.PI / 2, 0, 0]} />
        <mesh geometry={nodes.micro_SD_0.geometry} material={materials['metal.001']} rotation={[Math.PI / 2, 0, 0]} />
        <mesh geometry={nodes.micro_HDMI_0.geometry} material={materials['metal.001']} rotation={[Math.PI / 2, 0, 0]} />
        <mesh geometry={nodes.mount_bracket_0.geometry} material={materials.Material} />
        <mesh geometry={nodes.base_0.geometry} material={materials['Material.003']} />
        <mesh geometry={nodes.base_1.geometry} material={materials['Material.001']} />
        <mesh geometry={nodes.SDCard_0.geometry} material={materials['Material.001']} scale={[1, 0.99, 0.61]} />
        <mesh geometry={nodes.camera_port_0.geometry} material={materials['metal.001']} position={[0.02, 0.02, 0]} rotation={[Math.PI / 2, Math.PI / 2, 0]} />
      </group>
    </group>
  )
}

useGLTF.preload('/pi-transformed.glb')
